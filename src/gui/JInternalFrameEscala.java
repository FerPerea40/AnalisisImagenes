/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import static java.awt.image.BufferedImage.TYPE_INT_RGB;
import java.util.logging.Level;
import java.util.logging.Logger;
import listeners.ModificarImagenListener;

/**
 *
 * @author working
 */
public class JInternalFrameEscala extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameModificar
     */
    
    
    BufferedImage canva,canva2;
 BufferedImage       bi;
 JInternalFrameImagen nuevo2;
 
    public JInternalFrameEscala( BufferedImage bi, JInternalFrameImagen nuevo2) {
        initComponents();
         
        this.bi = bi;
        this.nuevo2 = nuevo2;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldX = new javax.swing.JTextField();
        jTextFieldY = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 255));
        setClosable(true);
        setIconifiable(true);

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
          
      

Image nueva =   scaling(bi,Double.parseDouble(this.jTextFieldX.getText()),Double.parseDouble(this.jTextFieldY.getText()));
              
              nuevo2.setImagen(nueva);
      
        


            }//GEN-LAST:event_jButton1ActionPerformed

      public static Image scaling (BufferedImage sourceImage, double zoomX, double zoomY){
        int newCols = (int) (sourceImage.getWidth() * zoomX);
        int newRows = (int) (sourceImage.getHeight() * zoomY);
        BufferedImage scaledImage = new BufferedImage(newCols,newRows,TYPE_INT_RGB);
        
        if((zoomX >= 1) && (zoomY >= 1))
            for(int y = 0; y < sourceImage.getHeight(); y++)
                for(int x = 0; x < sourceImage.getWidth(); x++){
                        for(int y1 = 0; y1 < (int)zoomY; y1++)
                            for(int x1 = 0; x1 < (int)zoomX; x1++)
                                scaledImage.setRGB((int)(x * zoomX) + x1, (int)(y * zoomY) + y1, sourceImage.getRGB(x, y));
                }
        else if((zoomX < 1) && (zoomY < 1)){
            int intervalX = (int) Math.rint((double)sourceImage.getWidth() / (double)(sourceImage.getWidth() - scaledImage.getWidth()));
            int intervalY = (int) Math.rint((double)sourceImage.getHeight() / (double)(sourceImage.getHeight() - scaledImage.getHeight()));
            int cX = 0;
            int cY = 0;

            for(int y = 0; y < scaledImage.getHeight(); y++)
                for(int x = 0; x < scaledImage.getWidth(); x++)
                    scaledImage.setRGB(x, y, sourceImage.getRGB(x * intervalX, y *  intervalY));
        }
        return scaledImage;
    
      
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jTextFieldX;
    private javax.swing.JTextField jTextFieldY;
    // End of variables declaration//GEN-END:variables
}
