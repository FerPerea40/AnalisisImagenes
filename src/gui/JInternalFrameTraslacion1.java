/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import static java.awt.image.BufferedImage.TYPE_INT_RGB;

/**
 *
 * @author working
 */
public class JInternalFrameTraslacion1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form JInternalFrameModificar
     */
    
    
    BufferedImage canva,canva2;
 BufferedImage       bi;
 JInternalFrameImagen nuevo2;
 
    public JInternalFrameTraslacion1(BufferedImage canva,BufferedImage bi, JInternalFrameImagen nuevo2) {
        initComponents();
         this.canva = canva;
        this.canva2 = canva;
        this.bi = bi;
        this.nuevo2 = nuevo2;
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldX = new javax.swing.JTextField();
        jTextFieldY = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 255));
        setClosable(true);
        setIconifiable(true);

        jButton1.setText("Modificar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  int matrizEnviar[][] = {{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1}};

           for(int i=0; i <canva.getWidth();i++){
                         for(int j=0; j <canva.getHeight();j++){
                canva.setRGB(i, j, new Color(255,255,255).getRGB());}
                }

           BufferedImage Rotada = herramientas.HerramientasImagen.toBufferedImage(rotation(bi,Integer.parseInt(this.jTextField1.getText())));
           
           
           
     BufferedImage Rotada2 = herramientas.HerramientasImagen.toBufferedImage(
                             herramientas.HerramientasImagen.aplicarConvolucion( 
                             herramientas.HerramientasImagen.toImage(Rotada),matrizEnviar, 25, 0));
        for(int r=0,i=Integer.parseInt(this.jTextFieldX.getText()); i <canva.getWidth();r++,i++){
                     for(int s=0,j=Integer.parseInt(this.jTextFieldY.getText()); j <canva.getHeight();s++,j++){
                     try {
                                                canva.setRGB(i, j, Rotada2.getRGB(r,s));

                    } catch (Exception e) {
                        // nada de nada 
                    }
                         
                        
                        }
          }
        
      
        
  nuevo2.setImagen(herramientas.HerramientasImagen.toImage(canva));


            }//GEN-LAST:event_jButton1ActionPerformed

    
    
    public static BufferedImage rotation (BufferedImage sourceImage, double angleDegrees){
        int max = 0;
        if(sourceImage.getHeight() > sourceImage.getWidth())
            max = sourceImage.getHeight();
        else if (sourceImage.getHeight() < sourceImage.getWidth())
            max = sourceImage.getWidth();
        else if(sourceImage.getHeight() == sourceImage.getWidth())
            max = sourceImage.getHeight();
        BufferedImage rotatedImage = new BufferedImage(max * 5, max * 5,TYPE_INT_RGB);
         for(int i=0; i <rotatedImage.getWidth();i++){
                         for(int j=0; j <rotatedImage.getHeight();j++){
                rotatedImage.setRGB(i, j, new Color(255,255,255).getRGB());}
                }
        int newOriginX = (int) sourceImage.getWidth() * 3;
        int newOriginY = (int) sourceImage.getHeight() * 3;
        double radians = Math.toRadians(-1 * angleDegrees);

        for(int y = 0; y < sourceImage.getHeight(); y++)
            for(int x = 0; x < sourceImage.getWidth(); x++){
                int newPositionX = (int) (x * Math.cos(radians) - y * Math.sin(radians)) + newOriginX;
                int newPositionY = (int) (x * Math.sin(radians) + y * Math.cos(radians)) + newOriginY;
                rotatedImage.setRGB(newPositionX, newPositionY, sourceImage.getRGB(x, y));
            }

        return rotatedImage;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldX;
    private javax.swing.JTextField jTextFieldY;
    // End of variables declaration//GEN-END:variables
}
